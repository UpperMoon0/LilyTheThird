#:kivy 2.0.0
#:import RGBStrip views.components.rgb_strip.RGBStrip
#:import VTSAnimationList views.components.vts_animation_list.VTSAnimationList
#:import VTSParamList views.components.vts_param_list.VTSParamList
#:import AnimationEditorPanel views.components.animation_editor_panel.AnimationEditorPanel # Import the new panel

<VTubeTab>:
    orientation: 'vertical'
    spacing: '10dp'
    padding: '10dp'

    # --- Top Row: RGB Strip and Connection Status ---
    RGBStrip:
        size_hint_y: None
        height: dp(3) # Keep it thin

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: '40dp'
        spacing: '10dp'

        Label:
            id: status_label
            text: root.status_text
            size_hint_x: 0.7

        Button:
            id: connect_button
            text: root.button_text
            size_hint_x: 0.3
            on_press: root.toggle_connection()
            disabled: self.text in ["Connecting...", "Disconnecting..."]

    # --- Main Content: Two Columns ---
    BoxLayout:
        orientation: 'horizontal'
        spacing: '10dp'
        size_hint_y: 1 # Take remaining vertical space

        # --- Column A: Animation List (40% width) ---
        BoxLayout:
            id: column_a
            orientation: 'vertical'
            size_hint_x: 0.4
            spacing: '5dp'

            TextInput:
                id: animation_search_input
                hint_text: "Search animations..."
                size_hint_y: None
                height: dp(30)
                multiline: False
                on_text: root.filter_animations(self.text)

            VTSAnimationList:
                id: vts_animation_list_widget
                size_hint_y: 1 # Take remaining space in column A
                disabled: not root.is_connected # Disable when not connected
                # Connect events to root (VTubeTab) methods
                on_trigger_animation: root.trigger_vts_animation(args[1])
                on_add_animation: root.handle_add_new_animation_button() # Renamed handler for clarity
                on_edit_animation: root.handle_edit_animation_selection(args[1]) # Renamed handler
                # on_delete_animation: root.handle_delete_animation(args[1]) # Keep if delete is implemented

        # --- Column B: Inline Animation Editor Panel (60% width) ---
        AnimationEditorPanel:
            id: editor_panel # ID to access the panel instance from VTubeTab
            size_hint_x: 0.6
            # Control visibility/interactivity from VTubeTab's is_editing property
            disabled: not root.is_editing
            opacity: 1 if root.is_editing else 0 # Hide completely when not editing

            # Bind the panel's events to methods in VTubeTab (root)
            on_save_animation: root.save_edited_animation(args[1]) # Pass data arg
            on_cancel_edit: root.cancel_edit()
            on_copy_names: root.copy_param_names_to_clipboard()
            on_set_from_clipboard: root.set_animation_from_clipboard()
