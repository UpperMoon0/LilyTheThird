#:kivy 2.0.0
#:import LLMSelector views.components.llm_selector.LLMSelector
#:import DiscordBotSettings views.components.discord_bot_settings.DiscordBotSettings
#:import DiscordBotStatus views.components.discord_bot_status.DiscordBotStatus

<DiscordTab>:
    # orientation is vertical by default for BoxLayout if not specified,
    # but explicit is good for clarity if needed.
    # spacing: dp(10) # Added spacing between child widgets
    # padding: dp(10) # Added padding around the tab content

    # Use ScrollView for potentially long content
    ScrollView:
        size_hint: 1, 1
        do_scroll_x: False # Disable horizontal scrolling for the main view
        bar_width: dp(10) # Make scrollbar more visible

        BoxLayout:
            orientation: 'vertical'
            size_hint_y: None # Allow the BoxLayout to be larger than the ScrollView
            height: self.minimum_height # Adjust height to content
            spacing: dp(15) # Spacing between major sections
            padding: dp(15) # Padding for the content within the ScrollView

            # --- Discord Bot Status and Control ---
            DiscordBotStatus:
                id: discord_bot_status_id
                # status_circle_color: root.discord_status_circle_color # REMOVED - DiscordBotStatus manages its own circle color and animation
                status_text: root.status_text # Still bound for display
                toggle_button_text: root.toggle_button_text # Still bound for display
                # message_section_visible is managed by DiscordBotStatus based on root.is_bot_running (via update_status)
                manual_send_channel_id: root.manual_send_channel_id_prop # Bind to parent's property for saving/loading
                # Events on_toggle_bot_pressed and on_send_message_pressed are bound in Python

            # --- Discord Bot Settings ---
            DiscordBotSettings:
                id: discord_bot_settings_id
                discord_token: root.discord_token
                guild_id: root.guild_id
                channel_id: root.channel_id # Listening channel ID
                master_discord_id: root.master_discord_id
                lily_discord_id: root.lily_discord_id
                # Bind on_settings_changed if you want to auto-save or react
                on_save_settings_pressed: root.save_all_discord_settings()

            # --- LLM Configuration Section ---
            LLMSelector:
                id: llm_selector_id
                llm_providers: root.llm_providers
                llm_models: root.llm_models
                selected_provider: root.selected_provider
                selected_model: root.selected_model
                # Bind on_provider_changed and on_model_changed if needed for specific logic beyond property binding
                # For example, if DiscordTab needs to react immediately beyond just saving.
                # The root properties are already bound in Python to trigger saves.
